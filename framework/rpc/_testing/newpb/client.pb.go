// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client.proto

package newpb

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"

	client "github.com/yunfeiyang1916/toolkit/framework/rpc/client"

	server "github.com/yunfeiyang1916/toolkit/framework/rpc/server"

	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ResponseCode int32

const (
	ResponseCode_SUCCESS        ResponseCode = 0
	ResponseCode_INTERNAL_ERROR ResponseCode = 1
	ResponseCode_PARAM_ERROR    ResponseCode = 2
)

var ResponseCode_name = map[int32]string{
	0: "SUCCESS",
	1: "INTERNAL_ERROR",
	2: "PARAM_ERROR",
}

var ResponseCode_value = map[string]int32{
	"SUCCESS":        0,
	"INTERNAL_ERROR": 1,
	"PARAM_ERROR":    2,
}

func (x ResponseCode) Enum() *ResponseCode {
	p := new(ResponseCode)
	*p = x
	return p
}

func (x ResponseCode) String() string {
	return proto.EnumName(ResponseCode_name, int32(x))
}

func (x *ResponseCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ResponseCode_value, data, "ResponseCode")
	if err != nil {
		return err
	}
	*x = ResponseCode(value)
	return nil
}

func (ResponseCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{0}
}

type EchoRequest struct {
	Message              *string  `protobuf:"bytes,1,req,name=message" json:"message,omitempty"`
	Error                *bool    `protobuf:"varint,2,opt,name=error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoRequest) Reset()         { *m = EchoRequest{} }
func (m *EchoRequest) String() string { return proto.CompactTextString(m) }
func (*EchoRequest) ProtoMessage()    {}
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{0}
}

func (m *EchoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoRequest.Unmarshal(m, b)
}
func (m *EchoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoRequest.Marshal(b, m, deterministic)
}
func (m *EchoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoRequest.Merge(m, src)
}
func (m *EchoRequest) XXX_Size() int {
	return xxx_messageInfo_EchoRequest.Size(m)
}
func (m *EchoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EchoRequest proto.InternalMessageInfo

func (m *EchoRequest) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *EchoRequest) GetError() bool {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return false
}

type EchoResponse struct {
	Response             *string       `protobuf:"bytes,1,req,name=response" json:"response,omitempty"`
	Code                 *ResponseCode `protobuf:"varint,2,req,name=code,enum=echo.ResponseCode" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *EchoResponse) Reset()         { *m = EchoResponse{} }
func (m *EchoResponse) String() string { return proto.CompactTextString(m) }
func (*EchoResponse) ProtoMessage()    {}
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{1}
}

func (m *EchoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoResponse.Unmarshal(m, b)
}
func (m *EchoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoResponse.Marshal(b, m, deterministic)
}
func (m *EchoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoResponse.Merge(m, src)
}
func (m *EchoResponse) XXX_Size() int {
	return xxx_messageInfo_EchoResponse.Size(m)
}
func (m *EchoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EchoResponse proto.InternalMessageInfo

func (m *EchoResponse) GetResponse() string {
	if m != nil && m.Response != nil {
		return *m.Response
	}
	return ""
}

func (m *EchoResponse) GetCode() ResponseCode {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ResponseCode_SUCCESS
}

func init() {
	proto.RegisterEnum("echo.ResponseCode", ResponseCode_name, ResponseCode_value)
	proto.RegisterType((*EchoRequest)(nil), "echo.EchoRequest")
	proto.RegisterType((*EchoResponse)(nil), "echo.EchoResponse")
}

func init() { proto.RegisterFile("client.proto", fileDescriptor_014de31d7ac8c57c) }

var fileDescriptor_014de31d7ac8c57c = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0xdd, 0x35, 0xd2, 0x3a, 0x09, 0xb5, 0x0e, 0x1e, 0x42, 0x4f, 0xa1, 0x07, 0x09, 0x82,
	0x39, 0xf4, 0xac, 0x60, 0x0c, 0x7b, 0x10, 0xb4, 0xca, 0xac, 0x9e, 0x45, 0xb6, 0x83, 0x2d, 0x68,
	0xa7, 0xee, 0x46, 0x7f, 0x87, 0x3f, 0x59, 0xea, 0xa6, 0x25, 0xb7, 0xfd, 0xde, 0xf2, 0xe6, 0xe3,
	0x41, 0xe6, 0x3e, 0x56, 0xbc, 0x6e, 0xab, 0x8d, 0x97, 0x56, 0x30, 0x61, 0xb7, 0x94, 0xe9, 0x35,
	0xa4, 0xc6, 0x2d, 0x85, 0xf8, 0xeb, 0x9b, 0x43, 0x8b, 0x39, 0x0c, 0x3e, 0x39, 0x84, 0xb7, 0x77,
	0xce, 0x55, 0xa1, 0xcb, 0x63, 0xda, 0x21, 0x9e, 0xc1, 0x11, 0x7b, 0x2f, 0x3e, 0xd7, 0x85, 0x2a,
	0x87, 0x14, 0x61, 0x4a, 0x90, 0xc5, 0x7a, 0xd8, 0xc8, 0x3a, 0x30, 0x4e, 0x60, 0xe8, 0xbb, 0x77,
	0x77, 0x60, 0xcf, 0x78, 0x0e, 0x89, 0x93, 0x05, 0xe7, 0xba, 0xd0, 0xe5, 0x68, 0x86, 0xd5, 0xd6,
	0x5f, 0xed, 0x9a, 0x8d, 0x2c, 0x98, 0xfe, 0xff, 0x2f, 0x6e, 0x20, 0xeb, 0xa7, 0x98, 0xc2, 0xc0,
	0xbe, 0x34, 0x8d, 0xb1, 0x76, 0x7c, 0x80, 0x08, 0xa3, 0xbb, 0xf9, 0xb3, 0xa1, 0x79, 0x7d, 0xff,
	0x6a, 0x88, 0x1e, 0x69, 0xac, 0xf0, 0x04, 0xd2, 0xa7, 0x9a, 0xea, 0x87, 0x2e, 0xd0, 0xb3, 0xab,
	0x38, 0xca, 0xb2, 0xff, 0x59, 0x39, 0xc6, 0x4b, 0x48, 0xb6, 0x88, 0xa7, 0x51, 0xd9, 0xdb, 0x3b,
	0xc1, 0x7e, 0x14, 0x9d, 0xb7, 0x87, 0xbf, 0x4a, 0xfd, 0x05, 0x00, 0x00, 0xff, 0xff, 0x65, 0xea,
	0x1a, 0x75, 0x2c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for EchoService service

type EchoService interface {
	Echo(ctx context.Context, in *EchoRequest, opts ...client.CallOption) (*EchoResponse, error)
}

type echoService struct {
	c    client.Client
	name string
}

func NewEchoService(name string, c client.Client) EchoService {
	if c == nil {
		panic("client is nil")
	}
	if len(name) == 0 {
		name = "echo"
	}
	return &echoService{
		c:    c,
		name: name,
	}
}

func (c *echoService) Echo(ctx context.Context, in *EchoRequest, opts ...client.CallOption) (*EchoResponse, error) {
	out := new(EchoResponse)
	err := c.c.Invoke(ctx, "echo.EchoService.Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for EchoService service

type EchoServiceHandler interface {
	Echo(context.Context, *EchoRequest) (*EchoResponse, error)
}

func RegisterEchoServiceHandler(s server.Server, hdlr EchoServiceHandler, opts ...server.HandlerOption) error {
	type echoService interface {
		Echo(ctx context.Context, in *EchoRequest) (*EchoResponse, error)
	}
	type EchoService struct {
		echoService
	}
	opts = append(opts, server.HandlerName("echo.EchoService"))
	h := &echoServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&EchoService{h}, opts...))
}

type echoServiceHandler struct {
	EchoServiceHandler
}

func (h *echoServiceHandler) Echo(ctx context.Context, in *EchoRequest) (*EchoResponse, error) {
	return h.EchoServiceHandler.Echo(ctx, in)
}
